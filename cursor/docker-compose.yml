version: "3"


services:
  nginx:
    image: nginx:1.23-alpine
    volumes:
      - .:/app
      - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - 1443:80
    networks:
      - app
    depends_on:
      - app

  app:
    build:
      context: .
      dockerfile: ./docker/python/Dockerfile
    command: gunicorn --bind 0.0.0.0:8000 cursor.wsgi
    ports:
      - 8080:5000
    environment:
      PYTHONBUFFERED: 1
    volumes:
      - .:/app
    depends_on:
      - db
    networks:
      - app
    env_file:
      - .env
    tty: true



  db:
    image: mysql:latest
    ports:
      - 3308:3306
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: cursor_db
    volumes:
      - ./docker/db:/var/lib/mysql
    networks:
      - app


  management:
    restart: always
    container_name: "managementTgBot"
    build:
      dockerfile: ./docker/python/Dockerfile
      context: ./
    volumes:
      - .:/app
    command: python3 manage.py polling
    environment:
      PYTHONBUFFERED: 1
    env_file:
      - .env
    depends_on:
      - app
      - db
      - nginx
    networks:
      - app
    tty: true



networks:
  app:
    driver: bridge